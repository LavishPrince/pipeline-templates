# .github/workflows/ios-build.yml

name: iOS Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ios-build:
    name: Build iOS App
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install

      - name: Install Pods
        working-directory: ios
        run: pod install

      - name: Set up Signing Credentials
        env:
          XCODE_DEVELOPER_TEAM_ID: ${{ secrets.XCODE_DEVELOPER_TEAM_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_PASSWORD: ${{ secrets.APPLE_APP_PASSWORD }}
          IOS_DISTRIBUTION_CERT: ${{ secrets.IOS_DISTRIBUTION_CERT }}
          IOS_PROVISIONING_PROFILE: ${{ secrets.IOS_PROVISIONING_PROFILE }}
          IOS_CERT_PASSWORD: ${{ secrets.IOS_CERT_PASSWORD }}
        run: |
          echo "$IOS_DISTRIBUTION_CERT" | base64 --decode > ios_distribution.p12
          echo "$IOS_PROVISIONING_PROFILE" | base64 --decode > ios_profile.mobileprovision

          # Create a temporary keychain for signing
          security create-keychain -p "" build.keychain
          security import ios_distribution.p12 -k build.keychain -P "$IOS_CERT_PASSWORD" -A
          security list-keychains -s build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain

          # Move provisioning profile to the correct directory
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp ios_profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Build iOS
        run: |
          xcodebuild \
            -workspace ios/YourApp.xcworkspace \
            -scheme YourApp \
            -configuration Release \
            -sdk iphoneos \
            -derivedDataPath ios/build \
            CODE_SIGN_STYLE=Manual \
            DEVELOPMENT_TEAM=$XCODE_DEVELOPER_TEAM_ID \
            PROVISIONING_PROFILE_SPECIFIER="YourProvisioningProfileName"

      - name: Archive Build Output
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: ios/build/Build/Products/Release-iphoneos/

      - name: Cleanup Keychain and Temporary Files
        if: always() # Ensures cleanup runs even if the build fails
        run: |
          # Delete the temporary keychain
          security delete-keychain build.keychain

          # Remove temporary files with sensitive data
          rm -f ios_distribution.p12
          rm -f ios_profile.mobileprovision
